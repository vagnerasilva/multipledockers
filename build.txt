#!/bin/bash
REGISTRY="vagnerasilva"
VERSION="latest"


for i in $(ls -d */); 
    do 
    #echo ${i:0:-1} # Removendo "/" da ultima posicao da string
    echo "## START ##"
    echo " "
    
    VALUE2="${i:0:-1}/Dockerfile ."   # criando nome da imagem a ser buildada
    VALUE1="container-${i:0:-1}"      # criando nome do container que sera utilizado  
    
    echo ${VALUE2}
    echo ${VALUE1}
    docker build -t ${VALUE1} -f ${VALUE2}   # Realizando build dos containers com o nome das pastas e dockerfiles em cada uma delas 
    #echo ${VALUE1} ${REGISTRY}/${VALUE1}:${VERSION}
    echo " "
    echo "## Build Done ##"
    docker tag ${VALUE1} ${REGISTRY}/${VALUE1}:${VERSION} # colocando tag para subir no dockerhub
    echo " "
    echo "## Tag Done ##"
    sleep 1
    docker push ${REGISTRY}/${VALUE1}:${VERSION}         # subindo no dockerhub   
    #docker images
    echo " "
    echo " "
    echo "## Docker push Done ##"
    echo " "
    echo " "
    sleep 1;
done

echo 'Done'
docker images



#!/bin/bash

# Example for the Docker Hub V2 API
# Returns all images and tags associated with a Docker Hub organization account.
# Requires 'jq': https://stedolan.github.io/jq/

# set username, password, and organization
UNAME=""
UPASS=""
ORG=""

# -------

set -e
echo

# get token
echo "Retrieving token ..."
TOKEN=$(curl -s -H "Content-Type: application/json" -X POST -d '{"username": "'${UNAME}'", "password": "'${UPASS}'"}' https://hub.docker.com/v2/users/login/ | jq -r .token)

# get list of repositories
echo "Retrieving repository list ..."
REPO_LIST=$(curl -s -H "Authorization: JWT ${TOKEN}" https://hub.docker.com/v2/repositories/${ORG}/?page_size=100 | jq -r '.results|.[]|.name')

# output images & tags
echo
echo "Images and tags for organization: ${ORG}"
echo
for i in ${REPO_LIST}
do
  echo "${i}:"
  # tags
  IMAGE_TAGS=$(curl -s -H "Authorization: JWT ${TOKEN}" https://hub.docker.com/v2/repositories/${ORG}/${i}/tags/?page_size=100 | jq -r '.results|.[]|.name')
  for j in ${IMAGE_TAGS}
  do
    echo "  - ${j}"
  done
  echo
done

# 1 Listar imagens com a tag 
# 2 listar pastas das imagens e seus nomes respectivamente

# 3 criar objeto com tag sha256 size e version

# 4 depois do build criar lista com tag sha 256 e size

# 5 criar nova versao para as imagens com sha256 diferentes e fazer push somente da lista nova

curl https://registry.hub.docker.com/v2/repositories/$REPOSITORY/tags?page_size=10000 | jq '.results[] | { name: .name, architectures: ([ (.images[] | if .variant? then .os + "/" + .architecture + .variant? else .os + "/" + .architecture end) ] | join(", ")) }'

curl https://registry.hub.docker.com/v2/repositories/vagnerasilva/container-img4/tags?page_size=10000 | jq '.results[] | { name: .name, architectures: ([ (.images[] | if .variant? then .os + "/" + .architecture + .variant? else .os + "/" + .architecture end) ] | join(", ")) }'
